---

templates:
  gain:
    class: pulsar::ladspa::node
    plugin:
      filename: /usr/lib/ladspa/amp.so
      id: 1048
  compressor:
    class: pulsar::ladspa::node
    # a scalar value is the same as specifying it as the
    # filename value and providing no other values
    plugin: /usr/lib/ladspa/ZamComp-ladspa.so
    # if there is no id present then if there is only one
    # type in the ladspa file automatically use that type
    # otherwise throw an exception
  equalizer:
    class: pulsar::ladspa::node
    plugin: /usr/lib/ladspa/ZamEQ-ladspa.so

chains:
  compressor_thing:
    inputs: [ left, right ]
    outputs: [ left, right ]
    connect:
      left: left_input_gain:Input
      right: right_input_gain:Input
    nodes:
      - name: left_input_gain
        template: gain
        connect:
          # connection is specified as a list so more
          # than one connection can exist
          Output:
            - left_compressor:Audio In

      - name: left_compressor
        template: compressor
        connect:
          # scalar value is the same as a list with 1 item
          Audio Out: left_output_gain:Input

      - name: left_output_gain
        template: gain
        # if no output channel is specified for the connection
        # then every output channel is connected to the target channel
        connect: compressor_thing:left

      - name: right_input_gain
        template: gain
        # if no input and no output channel is specified
        #  * if there is an equal number of inputs and outputs
        #    they will be wired together 1:1 in order
        #  * if there is one output channel it will be connected
        #    to every input channel
        #  * if there is multiple output channels and a single input
        #    channel all the outputs will connect to the single input
        #  * otherwise a fault is generated
        connect: right_compressor

      - name: right_compressor
        template: compressor
        connect:
          # if no input channel name is specified in the connection then
          # a connection is made to every input channel available
          Audio Out: right_output_gain

      - name: right_output_gain
        template: gain
        connect: compressor_thing:right

domains:
  main:
    config:
      sample_rate: 48000
      buffer_size: 1024
      threads: 4

    nodes:
      - name: io
        class: pulsar::jackaudio::node
        config:
          client_name: pulsar
        inputs: [ out_left, out_right ]
        outputs: [ in_left, in_right ]
        connect:
          in_left: eq_left
          in_right: eq_right

      - name: eq_left
        template: equalizer
        connect: compressor_chain:left

      - name: eq_right
        template: equalier
        connect: compressor_chain:right

      - name: compressor_chain
        chain: compressor_thing
        connect: io
        # same as this because the channel orders equal
        # connect:
        #   left: io:out_left
        #   right: io:out_right